import tkinter as tk
from tkinter import ttk
import requests
import matplotlib.pyplot as plt
from PIL import Image, ImageTk
from datetime import datetime, timedelta

# Substitua pela sua API Key da Exchangerate-API
API_KEY = '1d1a04c0ba4a1e6bda630c60'

# Cores
cor0 = '#ffffff'  # branca
cor1 = '#000000'  # preta
cor2 = '#1251a0'  # azul
cor3 = '#62b468'  # verde
cor_letras = '#ff5733'  # cor das letras (exemplo: laranja)

# Função para obter taxas de câmbio atuais
def get_exchange_rate(base_currency, target_currency):
    url = f"https://v6.exchangerate-api.com/v6/{API_KEY}/pair/{base_currency}/{target_currency}"
    response = requests.get(url)
    data = response.json()
    return data['conversion_rate']

# Função para obter taxas de câmbio históricas (últimos 7 dias)
def get_historical_rates(base_currency, target_currency):
    historical_rates = {}
    for i in range(7):
        date = (datetime.now() - timedelta(days=i)).strftime('%Y-%m-%d')
        url = f"https://v6.exchangerate-api.com/v6/{API_KEY}/history/{base_currency}/{target_currency}/{date}"
        response = requests.get(url)
        data = response.json()
        historical_rates[date] = data['conversion_rate']
    return historical_rates

# Função para converter a moeda
def convert_currency():
    try:
        amount = float(entry_amount.get())
        base_currency = combo_base_currency.get()
        target_currency = combo_target_currency.get()
        
        rate = get_exchange_rate(base_currency, target_currency)
        converted_amount = amount * rate
        label_result.config(text=f'{amount} {base_currency} = {converted_amount:.2f} {target_currency}', fg=cor_letras)
        
        # Exibe o gráfico da variação dos últimos 7 dias
        historical_rates = get_historical_rates(base_currency, target_currency)
        plot_exchange_rate(historical_rates, target_currency)
    except Exception as e:
        label_result.config(text="Erro ao converter. Verifique os dados inseridos.", fg="red")

# Função para plotar o gráfico da variação de câmbio
def plot_exchange_rate(historical_rates, target_currency):
    dates = sorted(historical_rates.keys())
    rates = [historical_rates[date] for date in dates]
    
    plt.figure(figsize=(8, 4))
    plt.plot(dates, rates, marker='o')
    plt.title(f'Taxa de Câmbio nos Últimos 7 Dias: {target_currency}')
    plt.xlabel('Data')
    plt.ylabel(f'Taxa {target_currency}')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

# Configurações da interface Tkinter
janela = tk.Tk()
janela.geometry('400x400')
janela.title('Conversor de Moedas')
janela.configure(bg=cor0)
janela.resizable(width=False, height=False)

# Estilos da interface
style = ttk.Style(janela)
style.theme_use('clam')

# Divisão da janela
frame_de_cima = tk.Frame(janela, width=400, height=75, bg=cor2, relief='flat')
frame_de_cima.grid(row=0, column=0, columnspan=2)

frame_de_baixo = tk.Frame(janela, width=400, height=325, bg=cor0, relief='flat')
frame_de_baixo.grid(row=1, column=0, sticky="nsew")

# Configuração do frame de cima com imagem
imagem = Image.open('imagens/imagem_dinheiro_branca.png')
imagem = ImageTk.PhotoImage(imagem)
nome_do_app = tk.Label(frame_de_cima, image=imagem, compound='left', text='Conversor de moedas',
                       height=6, pady=31, padx=41, relief='flat', anchor='center',
                       font=('Arial 16 bold'), bg=cor2, fg=cor0)
nome_do_app.place(x=0, y=0)

# Componentes da interface (frame de baixo)
label_amount = tk.Label(frame_de_baixo, text="Quantidade:", bg=cor0, fg=cor_letras, font=('Arial 12'))
label_amount.grid(column=0, row=0, padx=10, pady=10)

entry_amount = tk.Entry(frame_de_baixo, font=('Arial 12'))
entry_amount.grid(column=1, row=0, padx=10, pady=10)

label_base_currency = tk.Label(frame_de_baixo, text="De:", bg=cor0, fg=cor_letras, font=('Arial 12'))
label_base_currency.grid(column=0, row=1, padx=10, pady=10)

combo_base_currency = ttk.Combobox(frame_de_baixo, values=["USD", "BRL", "EUR"], font=('Arial 12'))
combo_base_currency.grid(column=1, row=1, padx=10, pady=10)

label_target_currency = tk.Label(frame_de_baixo, text="Para:", bg=cor0, fg=cor_letras, font=('Arial 12'))
label_target_currency.grid(column=0, row=2, padx=10, pady=10)

combo_target_currency = ttk.Combobox(frame_de_baixo, values=["USD", "BRL", "EUR"], font=('Arial 12'))
combo_target_currency.grid(column=1, row=2, padx=10, pady=10)

button_convert = tk.Button(frame_de_baixo, text="Converter", command=convert_currency, bg=cor3, fg=cor0, font=('Arial 12'))
button_convert.grid(column=1, row=3, padx=10, pady=10)

label_result = tk.Label(frame_de_baixo, text="", bg=cor0, fg=cor2, font=('Arial 12 bold'))
label_result.grid(column=1, row=4, padx=10, pady=10)

# Iniciar a interface
janela.mainloop()